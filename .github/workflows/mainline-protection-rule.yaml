name: Confirm Safe to Mainline

on:
  push: # for automations getting release --> main
    branches:
      - "release"
  pull_request: # for PRs directly to main
    branches:
      - "main"
    types:
      - opened
      - reopened
      - edited
      - labeled
      - unlabeled
      - synchronize
  pull_request_review: # to update with review status
    types:
      - submitted
      - edited
      - dismissed

env:
  BRANCH_IS_RELEASE: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/release' ||
    github.event_name == 'pull_request' && github.event.pull_request.head.ref == 'release' }}

jobs:
  Audit-Pull-Request-Mainline:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Release Path
        if: ${{ env.BRANCH_IS_RELEASE == true }}
        run: |
          echo "Release branch is always allowed to merge to main"
          exit 0
      - name: Bypassing Release
        if: ${{ env.BRANCH_IS_RELEASE != true }}
        run: |
          EVENT_NAME=${{ github.event_name }}
          if [[ "$EVENT_NAME" == "pull_request" ]]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
          elif [[ "$EVENT_NAME" == "pull_request_review" ]]; then
            PR_NUMBER=${{ github.event.review.pull_request.number }}
          else
            echo "Unsupported event type: $EVENT_NAME"
            exit 1
          fi
          BYPASS_LABEL=$(gh pr view $PR_NUMBER --json labels -q '.labels[].name' | grep -E '^Can Bypass QA ⚡$')
          REVIEW_DECISION_JSON=$(gh pr view $PR_NUMBER --json reviewDecision)
          if [[ "$REVIEW_DECISION_JSON" != *"APPROVED"* ]]; then
            echo "PR must have an approved review to merge"
            exit 1
          fi
          if [[ -z "$BYPASS_LABEL" ]]; then
            echo "Requires the label 'Can Bypass QA ⚡' to merge directly to main.""
            exit 1
          fi
          exit 0
