name: Reopen PR to Main

on:
  pull_request:
    types:
      - closed

permissions:
  pull-requests: write
  issues: write  # Needed to copy labels and add comments

jobs:
  reopen_pr_to_main:
    if: >-
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref != 'main' &&
      contains(github.event.pull_request.labels.*.name, 'retarget-main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: gh auth status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch original PR details
        id: pr_details
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="$(gh pr view $PR_NUMBER --json body -q '.body')"
          PR_HEAD="${{ github.event.pull_request.head.ref }}"
          PR_BASE="${{ github.event.pull_request.base.ref }}"
          PR_MERGE_COMMIT="${{ github.event.pull_request.merge_commit_sha }}"

          # Get all labels
          LABELS=$(gh pr view $PR_NUMBER --json labels -q '[.labels[].name] | join(",")')

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$PR_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "PR_HEAD=$PR_HEAD" >> $GITHUB_ENV
          echo "PR_BASE=$PR_BASE" >> $GITHUB_ENV
          echo "PR_MERGE_COMMIT=$PR_MERGE_COMMIT" >> $GITHUB_ENV
          echo "LABELS=$LABELS" >> $GITHUB_ENV

      - name: Find existing PR targeting the old branch (if any)
        id: existing_pr
        run: |
          TARGET_PR=$(gh pr list --state open --base "$PR_BASE" --json number -q '.[0].number' || echo "")
          echo "TARGET_PR=$TARGET_PR" >> $GITHUB_ENV

      - name: Reopen PR targeting main
        id: new_pr
        run: |
          NEW_PR_URL=$(gh pr create --title "$PR_TITLE" --body "$PR_BODY" --head "$PR_HEAD" --base main --json url -q '.url')
          echo "NEW_PR_URL=$NEW_PR_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply labels to new PR
        if: env.LABELS != ''
        run: gh pr edit "$NEW_PR_URL" --add-label "$LABELS"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment to new PR
        run: |
          COMMENT="This PR was automatically reopened targeting **main**.\n\n"
          COMMENT+="ðŸ”€ **Previous PR:** #${{ env.PR_NUMBER }}\n"
          COMMENT+="ðŸ“Œ **Merged into:** \`${{ env.PR_BASE }}\`"

          if [[ -n "${{ env.TARGET_PR }}" ]]; then
            COMMENT+=" (related open PR: #${{ env.TARGET_PR }})"
          fi

          COMMENT+="\nðŸ”— **Merge Commit:** \`${{ env.PR_MERGE_COMMIT }}\`"

          gh pr comment "$NEW_PR_URL" --body "$COMMENT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
