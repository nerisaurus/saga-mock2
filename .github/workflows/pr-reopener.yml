name: Reopen PR to Main

on:
  pull_request:
    types:
      - closed

permissions:
  pull-requests: write  # Grant permission to create PRs

jobs:
  reopen_pr_to_main:
    if: >-
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref != 'main' &&
      contains(github.event.pull_request.labels.*.name, 'retarget-main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: gh auth status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Reopen PR targeting main
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="$(gh pr view $PR_NUMBER --json body -q '.body')"
          PR_HEAD="${{ github.event.pull_request.head.ref }}"
          PR_BASE="${{ github.event.pull_request.base.ref }}"
          PR_MERGE_COMMIT="${{ github.event.pull_request.merge_commit_sha }}"
          PR_LABELS=$(gh pr view $PR_NUMBER --json labels -q '[.labels[].name] | join(",")')

          # Create a new PR targeting main and get the PR number from it
          NEW_PR_NUMBER=$(gh pr create --title "$PR_TITLE" --body "$PR_BODY" --head "$PR_HEAD" --base main --labels "$PR_LABELS" | sed 's@^.*\/@@g')

          # Add information to the new PR so the history can be traced
          if [[ -n "$NEW_PR_NUMBER" ]]; then
            COMMENT="This PR was automatically reopened targeting **main**.\n\n"
            COMMENT+="ðŸ”€ **Previous PR:** #${{ env.PR_NUMBER }}"
            COMMENT+="\nðŸ“Œ **Merged into:** \`${{ env.PR_BASE }}\`"
            COMMENT+="\nðŸ”— **Merge Commit:** \`${{ env.PR_MERGE_COMMIT }}\`"
            gh pr comment $NEW_PR_NUMBER --body "$COMMENT"
          else
            exit 1
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
